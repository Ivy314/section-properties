name: CI

on:
  pull_request:
    types: [opened, reopened, synchronize]

env:
  UV_VERSION: "0.4.24"

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  pre-commit:
    name: pre-commit 3.12 [ubuntu]
    runs-on: ubuntu-latest

    steps:
      - name: Check out the repo
        uses: actions/checkout@v4

      - name: Install uv version $UV_VERSION
        uses: astral-sh/setup-uv@v3
        with:
          version: $UV_VERSION
          enable-cache: true

      - name: Install python 3.12 using uv
        run: uv python install 3.12

      - name: Install dependencies
        run: uv sync --frozen

      - name: Run pre-commit
        run: uv run pre-commit run --all-files --color always --show-diff-on-failure

  # TODO: mypy:
    # - { python: "3.12", os: "ubuntu-latest", session: "mypy" }
    # - { python: "3.11", os: "ubuntu-latest", session: "mypy" }
    # - { python: "3.10", os: "ubuntu-latest", session: "mypy" }

  tests:
    name: ${{ matrix.session }} ${{ matrix.python }} [${{ matrix.os }}]
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - { python: "3.12", os: "ubuntu-latest", session: "tests" }
          - { python: "3.11", os: "ubuntu-latest", session: "tests" }
          - { python: "3.10", os: "ubuntu-latest", session: "tests" }
          - { python: "3.12", os: "windows-latest", session: "tests" }
          - { python: "3.11", os: "windows-latest", session: "tests" }
          - { python: "3.10", os: "windows-latest", session: "tests" }
          - { python: "3.12", os: "macos-latest", session: "tests" }
          - { python: "3.11", os: "macos-latest", session: "tests" }
          - { python: "3.10", os: "macos-latest", session: "tests" }
          - { python: "3.12", os: "macos-13", session: "tests" }
          - { python: "3.11", os: "macos-13", session: "tests" }
          - { python: "3.10", os: "macos-13", session: "tests" }
          - { python: "3.12", os: "ubuntu-latest", session: "tests-extended" }

    steps:
      - name: Check out the repo
        uses: actions/checkout@v4

      - name: Install uv version $UV_VERSION
        uses: astral-sh/setup-uv@v3
        with:
          version: $UV_VERSION
          enable-cache: true

      - name: Install python ${{ matrix.python }} using uv
        run: uv python install ${{ matrix.python }}

      - name: Install test dependencies
        run: uv sync --frozen --extra rhino --extra dxf
        if: matrix.session != "tests-extended"

      - name: Install extended test dependencies
        run: uv sync --frozen --all-extras
        if: matrix.session == "tests-extended"

      - name: Run pytest
        if: matrix.session == "tests"
        run: uv run pytest -m "not benchmark_suite"

  docs-build:
    name: docs-build 3.12 [ubuntu]
    runs-on: ubuntu-latest

    steps:
      - name: Check out the repo
        uses: actions/checkout@v4

      - name: Install uv version $UV_VERSION
        uses: astral-sh/setup-uv@v3
        with:
          version: $UV_VERSION
          enable-cache: true

      - name: Install python 3.12 using uv
        run: uv python install 3.12

      - name: Install dependencies
        run: uv sync --frozen --extra rhino --extra dxf

      - name: Install pandoc
        uses: pandoc/actions/setup@v1

      - name: Build docs
        run: uv run sphinx-build --color docs docs/_build

      - name: Upload docs
        uses: actions/upload-artifact@v4
        with:
          name: docs
          path: docs/_build

# TODO: COVERAGE
